{
  "openapi": "3.0.0",
  "info": {
    "description": "API реализует аутентификации и авторизации пользователей",
    "version": "1.0.0",
    "title": "flask_auth_service"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8005/"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "API make authorization and authentication"
    }
  ],
  "paths": {
    "/api/v1/auth/sign_in": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Returns access & refresh tokens if succeed",
        "requestBody": {
          "description": "email / password Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailPasswordRequestBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/emailPasswordResponseBody"
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Returns 201 if succeed, 403 otherwise",
        "requestBody": {
          "description": "email / password Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/emailPasswordRequestBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/request": {
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Returns bookRequests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequests"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book Request"
        ],
        "summary": "Create a new book request system",
        "requestBody": {
          "description": "Book Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/request/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Get book request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book request not found."
          }
        }
      },
      "put": {
        "summary": "edit a book request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Book Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequest"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete Book Request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book Request not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "emailPasswordRequestBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "string",
            "example": "Alice"
          },
          "password": {
            "type": "string",
            "format": "email",
            "example": "ChangeMe"
          }
        }
      },
      "emailPasswordResponseBody": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "format": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiODA5OTEwMDIwMzAiLCJleHBpcmVBdCI6MTUxNjIzOTAyMiwicm9sZSI6InN1YnNjcmliZXIifQ.MyXHl4ZbvRNwdZI8BEWDxJXBRAGJ3sf8rcpSMhG0HtY"
          },
          "refresh_token": {
            "type": "string",
            "format": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZXN1bHQiOiJZb3UgYXJlIHZlcnkgc21hcnQhIn0.GZvDoQdT9ldwmlPOrZWrpiaHas0DiFmZlytr1dhaxi4"
          },
          "resp": {
            "type": "string",
            "format": "string",
            "example": "its from pipeline: /api/v1/auth/signin"
          }
        }
      },
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "bookRequestPostBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "bookRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "timestamp": {
            "type": "string",
            "format": "number"
          }
        }
      },
      "bookRequests": {
        "type": "object",
        "properties": {
          "bookRequest": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/bookRequest"
            }
          }
        }
      }
    }
  }
}